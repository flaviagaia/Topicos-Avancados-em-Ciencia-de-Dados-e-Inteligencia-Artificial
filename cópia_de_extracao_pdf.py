# -*- coding: utf-8 -*-
"""Cópia de Extracao_PDF.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11zpzxesbJ7DiZzG-20fFeWTUhdcZHK2k

### Extração de textos de PDF

Na construção de aplicações que lidam com problemas de Processamento de Linguagem Natural, é comum a necessidade de consumir informações presentes em arquivos PDF. Neste notebook será apresentado um exemplo de utilização de uma biblioteca python recomendada para isso: [PDF Plumber](https://github.com/jsvine/pdfplumber).

Importante destacar que existem várias outras bibliotecas dedicadas a essa tarefa, inclusive, este [post](https://towardsdatascience.com/how-to-extract-text-from-pdf-245482a96de7) apresenta uma comparação entre algumas.
"""

# instalação
!pip install pdfplumber -q

import pdfplumber
import os
import pandas as pd
from itertools import islice

documento_analisado='/content/drive/MyDrive/TopicosNLP-02_2022/Notebooks/Sumário do Resultado 2T22.pdf'

pdf = pdfplumber.open(documento_analisado)

pdf

"""### Metadados do documento"""

pdf.metadata

"""### Páginas do documento
Para acessar as páginas existentes no arquivo, utilizamos a função `pages`.

Ela retorna uma lista com as páginas do arquivo.
"""

len(pdf.pages)

page = pdf.pages[0]
page.page_number

type(page)

text = page.extract_text()
print(text)

# Página com tabelas
print(pdf.pages[1].extract_text())

# Página com gráficos
print(pdf.pages[7].extract_text())

"""Pegando todas as páginas do documento:"""

inteiro_teor = ''
for page in pdf.pages:
  inteiro_teor=inteiro_teor + page.extract_text()
  inteiro_teor=inteiro_teor + ' '

inteiro_teor

print(pdf.pages[5].extract_text())

# documento teste
doc_teste=pdfplumber.open('/content/drive/MyDrive/TopicosNLP-02_2022/Notebooks/Relatorio_Teste.pdf')

len(doc_teste.pages)

table_test=doc_teste.pages[2].extract_table()

type(table_test)

pd.DataFrame(table_test[1::], columns=table_test[0])

# a verificar
table=pdf.pages[1].extract_table()

# import pandas as pd
# pd.DataFrame(table[1::],columns=table[0])

type(table)

"""Outro exemplo: Ata do Copom"""

ata_compom='/content/drive/MyDrive/TopicosNLP-02_2022/Notebooks/Copom248-not20220803248.pdf'
pdf = pdfplumber.open(ata_compom)

len(pdf.pages)

pdf.pages[0].extract_text()

print(pdf.pages[1].extract_text())

"""Análise de um documento com formatação de duas colunas"""

dou='/content/drive/MyDrive/TopicosNLP-02_2022/Notebooks/2022_09_06_ASSINADO_do1.pdf'
pdf = pdfplumber.open(dou)

len(pdf.pages)

print(pdf.pages[0].extract_text())

"""Não é interessante quando o documento possui formatação que não seja simples. Com texto corrido. Nesses casos, é melhor optar por um webscraping."""